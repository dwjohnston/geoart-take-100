{
	// Place your sparx workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create RTL Test": {
		"prefix": "djtest ",
		"body": [
		  "import React from 'react';",
		  "import { render, screen } from '@testing-library/react';",
		  "import { $1 } from './$1';",
		  "",
		  "describe('<$1/>', () => {",
		  "  it(\"Doesn't crash on render\", () => {",
		  "    render(<$1 />);",
		  "  });",
		  "});",
		  ""
		],
		"description": "Create RTL Test"
	  },
	  
	  "Create Styles": {
		"prefix": "djstyle",
		"body": [
		  "import styled from 'styled-components';",
		  "",
		  "export const Styled$1 = styled.div`",
		  "",
		  "`;",
		  ""
		],
		"description": "Create Styles"
	  }, 

	  "Create Stories": {
		"prefix": "djstories",
		"body": [
		  "import React from 'react';",
		  "import { $1 } from './$1';",
		  "",
		  "export const Default = () => {",
		  "  return (",
		  "    <>",
		  "      <$1 />",
		  "    </>",
		  "  );",
		  "};",
		  "",
		  "export default {",
		  "  component: $1,",
		  "  title: '$2/$1',",
		  "  parameters: {",

		  "  },",
		  "};",
		  ""
		],
		"description": "Create Stories"
	  }, 
	  "Create React Component": {
		"prefix": "djreact",
		"body": [
		  "import React from 'react';",
		  "",
		  "export type $1Props = {",
		  "$3    ",
		  "}",
		  "",
		  "export const $1 = (props: $1Props) => {",
		  "  const {} = props;",
		  "  return <>$2</>;",
		  "};",
		  ""
		],
		"description": "Create React Component"
	  }





}